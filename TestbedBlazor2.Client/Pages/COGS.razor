@using System.Text
@using COGSLib;
@page "/"
@inject IJSRuntime jsRuntime
@inject WeightedAverage weightedAvg
@inject FIFO fifo
@inject LIFO lifo

<h1>COGS</h1>

<input @ref="inputFile" type="file" @onchange="FileChosen" />

<Performance Title="Weighted Average" COGSPerformance="weightedAvgResult?.Performance" />
<Performance Title="First In First Out" COGSPerformance="fifoResult?.Performance" />
<Performance Title="Last In First Out" COGSPerformance="lifoResult?.Performance" />

@code {
    private ElementRef inputFile;

    private COGSResult weightedAvgResult = new COGSResult(new COGSLib.Performance(0,0,0,0), new List<ComputedEntry>());
    private COGSResult fifoResult = new COGSResult(new COGSLib.Performance(0,0,0,0), new List<ComputedEntry>());
    private COGSResult lifoResult = new COGSResult(new COGSLib.Performance(0,0,0,0), new List<ComputedEntry>());

    async Task FileChosen()
    {
        string dataUrlJS = await jsRuntime.InvokeAsync<string>("jsInterop.GetFileData", inputFile);
        DataUrl dataUrl = new DataUrl(dataUrlJS);
        byte[] data = Convert.FromBase64String(dataUrl.Data);
        string json = Encoding.UTF8.GetString(data);
        List<Entry> entries = JsonConvert.DeserializeObject<List<Entry>>(json);

        weightedAvgResult = weightedAvg.ComputeCOGS(entries);
        fifoResult = fifo.ComputeCOGS(entries);
        lifoResult = lifo.ComputeCOGS(entries);
    }
}
